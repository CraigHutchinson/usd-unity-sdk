//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace pxr {

public class UsdLuxShapingAPI : UsdAPISchemaBase {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal UsdLuxShapingAPI(global::System.IntPtr cPtr, bool cMemoryOwn) : base(UsdCsPINVOKE.UsdLuxShapingAPI_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(UsdLuxShapingAPI obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          UsdCsPINVOKE.delete_UsdLuxShapingAPI(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public UsdLuxShapingAPI(UsdPrim prim) : this(UsdCsPINVOKE.new_UsdLuxShapingAPI__SWIG_0(UsdPrim.getCPtr(prim)), true) {
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
  }

  public UsdLuxShapingAPI() : this(UsdCsPINVOKE.new_UsdLuxShapingAPI__SWIG_1(), true) {
  }

  public UsdLuxShapingAPI(UsdSchemaBase schemaObj) : this(UsdCsPINVOKE.new_UsdLuxShapingAPI__SWIG_2(UsdSchemaBase.getCPtr(schemaObj)), true) {
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
  }

  public new static TfTokenVector GetSchemaAttributeNames(bool includeInherited) {
    TfTokenVector ret = new TfTokenVector(UsdCsPINVOKE.UsdLuxShapingAPI_GetSchemaAttributeNames__SWIG_0(includeInherited), false);
    return ret;
  }

  public new static TfTokenVector GetSchemaAttributeNames() {
    TfTokenVector ret = new TfTokenVector(UsdCsPINVOKE.UsdLuxShapingAPI_GetSchemaAttributeNames__SWIG_1(), false);
    return ret;
  }

  public static UsdLuxShapingAPI Get(UsdStageWeakPtr stage, SdfPath path) {
    UsdLuxShapingAPI ret = new UsdLuxShapingAPI(UsdCsPINVOKE.UsdLuxShapingAPI_Get(UsdStageWeakPtr.getCPtr(stage), SdfPath.getCPtr(path)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool CanApply(UsdPrim prim, /*cstype*/ out string whyNot) {
    bool ret = UsdCsPINVOKE.UsdLuxShapingAPI_CanApply__SWIG_0(UsdPrim.getCPtr(prim), out whyNot);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool CanApply(UsdPrim prim) {
    bool ret = UsdCsPINVOKE.UsdLuxShapingAPI_CanApply__SWIG_1(UsdPrim.getCPtr(prim));
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdLuxShapingAPI Apply(UsdPrim prim) {
    UsdLuxShapingAPI ret = new UsdLuxShapingAPI(UsdCsPINVOKE.UsdLuxShapingAPI_Apply(UsdPrim.getCPtr(prim)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute GetShapingFocusAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_GetShapingFocusAttr(swigCPtr), true);
    return ret;
  }

  public UsdAttribute CreateShapingFocusAttr(VtValue defaultValue, bool writeSparsely) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingFocusAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShapingFocusAttr(VtValue defaultValue) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingFocusAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShapingFocusAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingFocusAttr__SWIG_2(swigCPtr), true);
    return ret;
  }

  public UsdAttribute GetShapingFocusTintAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_GetShapingFocusTintAttr(swigCPtr), true);
    return ret;
  }

  public UsdAttribute CreateShapingFocusTintAttr(VtValue defaultValue, bool writeSparsely) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingFocusTintAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShapingFocusTintAttr(VtValue defaultValue) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingFocusTintAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShapingFocusTintAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingFocusTintAttr__SWIG_2(swigCPtr), true);
    return ret;
  }

  public UsdAttribute GetShapingConeAngleAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_GetShapingConeAngleAttr(swigCPtr), true);
    return ret;
  }

  public UsdAttribute CreateShapingConeAngleAttr(VtValue defaultValue, bool writeSparsely) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingConeAngleAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShapingConeAngleAttr(VtValue defaultValue) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingConeAngleAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShapingConeAngleAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingConeAngleAttr__SWIG_2(swigCPtr), true);
    return ret;
  }

  public UsdAttribute GetShapingConeSoftnessAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_GetShapingConeSoftnessAttr(swigCPtr), true);
    return ret;
  }

  public UsdAttribute CreateShapingConeSoftnessAttr(VtValue defaultValue, bool writeSparsely) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingConeSoftnessAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShapingConeSoftnessAttr(VtValue defaultValue) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingConeSoftnessAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShapingConeSoftnessAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingConeSoftnessAttr__SWIG_2(swigCPtr), true);
    return ret;
  }

  public UsdAttribute GetShapingIesFileAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_GetShapingIesFileAttr(swigCPtr), true);
    return ret;
  }

  public UsdAttribute CreateShapingIesFileAttr(VtValue defaultValue, bool writeSparsely) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesFileAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShapingIesFileAttr(VtValue defaultValue) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesFileAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShapingIesFileAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesFileAttr__SWIG_2(swigCPtr), true);
    return ret;
  }

  public UsdAttribute GetShapingIesAngleScaleAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_GetShapingIesAngleScaleAttr(swigCPtr), true);
    return ret;
  }

  public UsdAttribute CreateShapingIesAngleScaleAttr(VtValue defaultValue, bool writeSparsely) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesAngleScaleAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShapingIesAngleScaleAttr(VtValue defaultValue) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesAngleScaleAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShapingIesAngleScaleAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesAngleScaleAttr__SWIG_2(swigCPtr), true);
    return ret;
  }

  public UsdAttribute GetShapingIesNormalizeAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_GetShapingIesNormalizeAttr(swigCPtr), true);
    return ret;
  }

  public UsdAttribute CreateShapingIesNormalizeAttr(VtValue defaultValue, bool writeSparsely) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesNormalizeAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShapingIesNormalizeAttr(VtValue defaultValue) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesNormalizeAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShapingIesNormalizeAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesNormalizeAttr__SWIG_2(swigCPtr), true);
    return ret;
  }

  public UsdLuxShapingAPI(UsdShadeConnectableAPI connectable) : this(UsdCsPINVOKE.new_UsdLuxShapingAPI__SWIG_3(UsdShadeConnectableAPI.getCPtr(connectable)), true) {
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
  }

  public UsdShadeConnectableAPI ConnectableAPI() {
    UsdShadeConnectableAPI ret = new UsdShadeConnectableAPI(UsdCsPINVOKE.UsdLuxShapingAPI_ConnectableAPI(swigCPtr), true);
    return ret;
  }

  public UsdShadeOutput CreateOutput(TfToken name, SdfValueTypeName typeName) {
    UsdShadeOutput ret = new UsdShadeOutput(UsdCsPINVOKE.UsdLuxShapingAPI_CreateOutput(swigCPtr, TfToken.getCPtr(name), SdfValueTypeName.getCPtr(typeName)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdShadeOutput GetOutput(TfToken name) {
    UsdShadeOutput ret = new UsdShadeOutput(UsdCsPINVOKE.UsdLuxShapingAPI_GetOutput(swigCPtr, TfToken.getCPtr(name)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdShadeOutputVector GetOutputs(bool onlyAuthored) {
    UsdShadeOutputVector ret = new UsdShadeOutputVector(UsdCsPINVOKE.UsdLuxShapingAPI_GetOutputs__SWIG_0(swigCPtr, onlyAuthored), true);
    return ret;
  }

  public UsdShadeOutputVector GetOutputs() {
    UsdShadeOutputVector ret = new UsdShadeOutputVector(UsdCsPINVOKE.UsdLuxShapingAPI_GetOutputs__SWIG_1(swigCPtr), true);
    return ret;
  }

  public UsdShadeInput CreateInput(TfToken name, SdfValueTypeName typeName) {
    UsdShadeInput ret = new UsdShadeInput(UsdCsPINVOKE.UsdLuxShapingAPI_CreateInput(swigCPtr, TfToken.getCPtr(name), SdfValueTypeName.getCPtr(typeName)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdShadeInput GetInput(TfToken name) {
    UsdShadeInput ret = new UsdShadeInput(UsdCsPINVOKE.UsdLuxShapingAPI_GetInput(swigCPtr, TfToken.getCPtr(name)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdShadeInputVector GetInputs(bool onlyAuthored) {
    UsdShadeInputVector ret = new UsdShadeInputVector(UsdCsPINVOKE.UsdLuxShapingAPI_GetInputs__SWIG_0(swigCPtr, onlyAuthored), true);
    return ret;
  }

  public UsdShadeInputVector GetInputs() {
    UsdShadeInputVector ret = new UsdShadeInputVector(UsdCsPINVOKE.UsdLuxShapingAPI_GetInputs__SWIG_1(swigCPtr), true);
    return ret;
  }

  public static readonly UsdSchemaKind schemaKind = (UsdSchemaKind)UsdCsPINVOKE.UsdLuxShapingAPI_schemaKind_get();
}

}
