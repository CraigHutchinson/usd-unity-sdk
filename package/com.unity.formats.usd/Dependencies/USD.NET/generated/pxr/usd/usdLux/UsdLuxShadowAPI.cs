//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace pxr {

public class UsdLuxShadowAPI : UsdAPISchemaBase {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal UsdLuxShadowAPI(global::System.IntPtr cPtr, bool cMemoryOwn) : base(UsdCsPINVOKE.UsdLuxShadowAPI_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(UsdLuxShadowAPI obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          UsdCsPINVOKE.delete_UsdLuxShadowAPI(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public UsdLuxShadowAPI(UsdPrim prim) : this(UsdCsPINVOKE.new_UsdLuxShadowAPI__SWIG_0(UsdPrim.getCPtr(prim)), true) {
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
  }

  public UsdLuxShadowAPI() : this(UsdCsPINVOKE.new_UsdLuxShadowAPI__SWIG_1(), true) {
  }

  public UsdLuxShadowAPI(UsdSchemaBase schemaObj) : this(UsdCsPINVOKE.new_UsdLuxShadowAPI__SWIG_2(UsdSchemaBase.getCPtr(schemaObj)), true) {
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
  }

  public new static TfTokenVector GetSchemaAttributeNames(bool includeInherited) {
    TfTokenVector ret = new TfTokenVector(UsdCsPINVOKE.UsdLuxShadowAPI_GetSchemaAttributeNames__SWIG_0(includeInherited), false);
    return ret;
  }

  public new static TfTokenVector GetSchemaAttributeNames() {
    TfTokenVector ret = new TfTokenVector(UsdCsPINVOKE.UsdLuxShadowAPI_GetSchemaAttributeNames__SWIG_1(), false);
    return ret;
  }

  public static UsdLuxShadowAPI Get(UsdStageWeakPtr stage, SdfPath path) {
    UsdLuxShadowAPI ret = new UsdLuxShadowAPI(UsdCsPINVOKE.UsdLuxShadowAPI_Get(UsdStageWeakPtr.getCPtr(stage), SdfPath.getCPtr(path)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool CanApply(UsdPrim prim, /*cstype*/ out string whyNot) {
    bool ret = UsdCsPINVOKE.UsdLuxShadowAPI_CanApply__SWIG_0(UsdPrim.getCPtr(prim), out whyNot);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool CanApply(UsdPrim prim) {
    bool ret = UsdCsPINVOKE.UsdLuxShadowAPI_CanApply__SWIG_1(UsdPrim.getCPtr(prim));
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UsdLuxShadowAPI Apply(UsdPrim prim) {
    UsdLuxShadowAPI ret = new UsdLuxShadowAPI(UsdCsPINVOKE.UsdLuxShadowAPI_Apply(UsdPrim.getCPtr(prim)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute GetShadowEnableAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_GetShadowEnableAttr(swigCPtr), true);
    return ret;
  }

  public UsdAttribute CreateShadowEnableAttr(VtValue defaultValue, bool writeSparsely) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_CreateShadowEnableAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShadowEnableAttr(VtValue defaultValue) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_CreateShadowEnableAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShadowEnableAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_CreateShadowEnableAttr__SWIG_2(swigCPtr), true);
    return ret;
  }

  public UsdAttribute GetShadowColorAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_GetShadowColorAttr(swigCPtr), true);
    return ret;
  }

  public UsdAttribute CreateShadowColorAttr(VtValue defaultValue, bool writeSparsely) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_CreateShadowColorAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShadowColorAttr(VtValue defaultValue) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_CreateShadowColorAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShadowColorAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_CreateShadowColorAttr__SWIG_2(swigCPtr), true);
    return ret;
  }

  public UsdAttribute GetShadowDistanceAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_GetShadowDistanceAttr(swigCPtr), true);
    return ret;
  }

  public UsdAttribute CreateShadowDistanceAttr(VtValue defaultValue, bool writeSparsely) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_CreateShadowDistanceAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShadowDistanceAttr(VtValue defaultValue) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_CreateShadowDistanceAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShadowDistanceAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_CreateShadowDistanceAttr__SWIG_2(swigCPtr), true);
    return ret;
  }

  public UsdAttribute GetShadowFalloffAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_GetShadowFalloffAttr(swigCPtr), true);
    return ret;
  }

  public UsdAttribute CreateShadowFalloffAttr(VtValue defaultValue, bool writeSparsely) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_CreateShadowFalloffAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShadowFalloffAttr(VtValue defaultValue) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_CreateShadowFalloffAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShadowFalloffAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_CreateShadowFalloffAttr__SWIG_2(swigCPtr), true);
    return ret;
  }

  public UsdAttribute GetShadowFalloffGammaAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_GetShadowFalloffGammaAttr(swigCPtr), true);
    return ret;
  }

  public UsdAttribute CreateShadowFalloffGammaAttr(VtValue defaultValue, bool writeSparsely) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_CreateShadowFalloffGammaAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShadowFalloffGammaAttr(VtValue defaultValue) {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_CreateShadowFalloffGammaAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdAttribute CreateShadowFalloffGammaAttr() {
    UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShadowAPI_CreateShadowFalloffGammaAttr__SWIG_2(swigCPtr), true);
    return ret;
  }

  public UsdLuxShadowAPI(UsdShadeConnectableAPI connectable) : this(UsdCsPINVOKE.new_UsdLuxShadowAPI__SWIG_3(UsdShadeConnectableAPI.getCPtr(connectable)), true) {
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
  }

  public UsdShadeConnectableAPI ConnectableAPI() {
    UsdShadeConnectableAPI ret = new UsdShadeConnectableAPI(UsdCsPINVOKE.UsdLuxShadowAPI_ConnectableAPI(swigCPtr), true);
    return ret;
  }

  public UsdShadeOutput CreateOutput(TfToken name, SdfValueTypeName typeName) {
    UsdShadeOutput ret = new UsdShadeOutput(UsdCsPINVOKE.UsdLuxShadowAPI_CreateOutput(swigCPtr, TfToken.getCPtr(name), SdfValueTypeName.getCPtr(typeName)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdShadeOutput GetOutput(TfToken name) {
    UsdShadeOutput ret = new UsdShadeOutput(UsdCsPINVOKE.UsdLuxShadowAPI_GetOutput(swigCPtr, TfToken.getCPtr(name)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdShadeOutputVector GetOutputs(bool onlyAuthored) {
    UsdShadeOutputVector ret = new UsdShadeOutputVector(UsdCsPINVOKE.UsdLuxShadowAPI_GetOutputs__SWIG_0(swigCPtr, onlyAuthored), true);
    return ret;
  }

  public UsdShadeOutputVector GetOutputs() {
    UsdShadeOutputVector ret = new UsdShadeOutputVector(UsdCsPINVOKE.UsdLuxShadowAPI_GetOutputs__SWIG_1(swigCPtr), true);
    return ret;
  }

  public UsdShadeInput CreateInput(TfToken name, SdfValueTypeName typeName) {
    UsdShadeInput ret = new UsdShadeInput(UsdCsPINVOKE.UsdLuxShadowAPI_CreateInput(swigCPtr, TfToken.getCPtr(name), SdfValueTypeName.getCPtr(typeName)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdShadeInput GetInput(TfToken name) {
    UsdShadeInput ret = new UsdShadeInput(UsdCsPINVOKE.UsdLuxShadowAPI_GetInput(swigCPtr, TfToken.getCPtr(name)), true);
    if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UsdShadeInputVector GetInputs(bool onlyAuthored) {
    UsdShadeInputVector ret = new UsdShadeInputVector(UsdCsPINVOKE.UsdLuxShadowAPI_GetInputs__SWIG_0(swigCPtr, onlyAuthored), true);
    return ret;
  }

  public UsdShadeInputVector GetInputs() {
    UsdShadeInputVector ret = new UsdShadeInputVector(UsdCsPINVOKE.UsdLuxShadowAPI_GetInputs__SWIG_1(swigCPtr), true);
    return ret;
  }

  public static readonly UsdSchemaKind schemaKind = (UsdSchemaKind)UsdCsPINVOKE.UsdLuxShadowAPI_schemaKind_get();
}

}
